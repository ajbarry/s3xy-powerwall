[[outputs.influxdb]]
  urls = ["http://influxdb:8086"]
  database = "powerwall"
  skip_database_creation = false  
	retention_policy = "raw"

[[inputs.http]]
  # urls = [
  #   "https://powerwall/api/meters/aggregates",
  #   "https://powerwall/api/system_status/soe"
  # ]
	urls = [
		"http://pypowerwall:8675/aggregates",
		"http://pypowerwall:8675/soe",
		"http://pypowerwall:8675/strings",
    "http://pypowerwall:8675/temps/pw"
	]
  method = "GET"
  insecure_skip_verify = true
  timeout = "5s"
  data_format = "json"

# Openweathermap
[[inputs.http]]
  urls = [
    "http://api.openweathermap.org/data/2.5/weather?id=${OWM_CITY_ID}&units=${OWM_UNITS}&appid=${OWM_API_KEY}"
  ]
  name_override = "weather"
  method = "GET"
  interval = "10m"
  timeout = "15s"
  data_format = "json"
  json_time_format = "unix"
  json_time_key = "dt"
  json_string_fields = ["weather_0_description", "weather_0_main", "weather_0_icon", "name", "sys_country"]
  tag_keys = ["id", "sys_country", "name"]

# [[inputs.openweathermap]]
#   ### See https://github.com/influxdata/telegraf/blob/master/plugins/inputs/openweathermap/README.md

#   ## OpenWeatherMap API key.
#   app_id = "${OWM_API_KEY}"

#   ## City ID's to collect weather data from.
#   city_id = ["${OWM_CITY_ID}"]

#   ## Language of the description field. Can be one of "ar", "bg",
#   ## "ca", "cz", "de", "el", "en", "fa", "fi", "fr", "gl", "hr", "hu",
#   ## "it", "ja", "kr", "la", "lt", "mk", "nl", "pl", "pt", "ro", "ru",
#   ## "se", "sk", "sl", "es", "tr", "ua", "vi", "zh_cn", "zh_tw"
#   # lang = "en"

#   ## APIs to fetch; can contain "weather" or "forecast".
#   # fetch = ["weather", "forecast"]
#   fetch = ["weather","forcast"]

#   ## OpenWeatherMap base URL
#   # base_url = "https://api.openweathermap.org/"

#   ## Timeout for HTTP response.
#   # response_timeout = "5s"

#   ## Preferred unit system for temperature and wind speed. Can be one of
#   ## "metric", "imperial", or "standard".
#   units = "${OWM_UNITS}"

#   ## Query interval; OpenWeatherMap weather data is updated every 10
#   ## minutes.
#   interval = "10m"

[[processors.date]]
	tag_key = "month"
	date_format = "Jan"

[[processors.date]]
	tag_key = "year"
	date_format = "2006"
